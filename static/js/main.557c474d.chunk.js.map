{"version":3,"sources":["ContactForm.js","ContactsList.js","Filter.js","services/local-storage.js","App.js","index.js","ContactList.module.css"],"names":["ContactForm","onAddContact","isNameUnique","useState","name","setName","number","setNumber","btnDisabled","setBtnDisabled","useEffect","onSubmit","e","preventDefault","newContact","id","uuidv1","toast","warning","type","value","onChange","target","disabled","configure","ContactsList","contacts","onDelete","map","contact","className","css","contactList","key","contactListName","contactListNumber","onClick","Filter","onSearch","input","setInput","htmlFor","get","JSON","parse","localStorage","getItem","error","save","setItem","stringify","contactsReducer","state","action","payload","filter","contactId","ReactDOM","render","useReducer","storage","dispatch","setFilter","contactsToShow","useMemo","toLowerCase","includes","every","length","query","document","getElementById","module","exports"],"mappings":"mRAQe,SAASA,EAAT,GAAsD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAAgB,EAC1CC,mBAAS,IADiC,mBAC3DC,EAD2D,KACrDC,EADqD,OAEtCF,mBAAS,IAF6B,mBAE3DG,EAF2D,KAEnDC,EAFmD,OA2B5BJ,oBAAS,GA3BmB,mBA2B3DK,EA3B2D,KA2B9CC,EA3B8C,KAiClE,OAJAC,qBAAU,WACRD,GAAgBL,IAASE,KACxB,CAACF,EAAME,IAGR,0BAAMK,SAtBa,SAAAC,GAGnB,GAFAA,EAAEC,iBAEGX,EAAaE,GAAlB,CAKA,IAAMU,EAAa,CAAEC,GAAIC,MAAUZ,OAAME,UACzCL,EAAaa,GAEbT,EAAQ,IACRE,EAAU,SARRU,IAAMC,QAAN,kBAAyBd,EAAzB,sBAmBA,wCACA,2BACEW,GAAG,OACHX,KAAK,OACLe,KAAK,OACLC,MAAOhB,EACPiB,SArCkB,SAAAT,GACtBP,EAAQO,EAAEU,OAAOF,UAsCf,0CACA,2BACEL,GAAG,SACHX,KAAK,SACLe,KAAK,MACLC,MAAOd,EACPe,SAzCoB,SAAAT,GACxBL,EAAUK,EAAEU,OAAOF,UA0CjB,4BAAQD,KAAK,SAASI,SAAUf,GAAhC,gBArDNS,IAAMO,Y,oBCDS,SAASC,EAAT,GAA+C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC/C,OACE,4BACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,wBAAIC,UAAWC,IAAIC,YAAaC,IAAKjB,OACnC,0BAAMc,UAAWC,IAAIG,iBAAkBL,EAAQzB,KAA/C,MACA,0BAAM0B,UAAWC,IAAII,mBAAoBN,EAAQvB,QACjD,4BAAQa,KAAK,SAASiB,QAAS,kBAAMT,EAASE,EAAQd,MAAtD,eCTK,SAASsB,EAAT,GAA+B,IAAbC,EAAY,EAAZA,SAAY,EACjBnC,mBAAS,IADQ,mBACpCoC,EADoC,KAC7BC,EAD6B,KAU3C,OACE,2BAAOC,QAAQ,SACb,2DACA,2BAAO1B,GAAG,QAAQI,KAAK,OAAOE,SAVd,SAAAT,GAClB,IAAM2B,EAAQ3B,EAAEU,OAAOF,MAEvBoB,EAASD,GACTD,EAASC,IAM8CnB,MAAOmB,KCblE,IAgBe,GACbG,IATU,SAAAT,GACV,IACE,OAAOU,KAAKC,MAAMC,aAAaC,QAAQb,IACvC,MAAOc,GACP,OAAO,OAMTC,KAlBW,SAACf,EAAKb,GACjB,IACEyB,aAAaI,QAAQhB,EAAKU,KAAKO,UAAU9B,IACzC,MAAO2B,GACP9B,IAAMC,QAAQ,mCCAZiC,EAAkB,SAACC,EAAOC,GAC9B,OAAQA,EAAOlC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWiC,GAAX,CAAkBC,EAAOC,QAAQzB,UAEnC,IAAK,gBACH,OAAOuB,EAAMG,QAAO,SAAA1B,GAAO,OAAIA,EAAQd,KAAOsC,EAAOC,QAAQE,aAE/D,QACE,OAAOJ,ICXbK,IAASC,OAAO,mBDeD,WAAgB,IAAD,EACCC,qBAC3BR,EACAS,EAAQlB,IAAI,aAAe,IAHD,mBACrBhB,EADqB,KACXmC,EADW,KAc5BnD,qBAAU,WACRkD,EAAQZ,KAAK,WAAYtB,KACxB,CAACA,IAhBwB,MAkBAvB,mBAAS,IAlBT,mBAkBrBoD,EAlBqB,KAkBbO,EAlBa,KAwBtBC,EAAiBC,mBAAQ,WAC7B,OAAOtC,EAAS6B,QAAO,SAAA1B,GAAO,OAC5BA,EAAQzB,KAAK6D,cAAcC,SAASX,EAAOU,oBAE5C,CAACvC,EAAU6B,IAKd,OACE,6BACE,yCAEA,kBAACvD,EAAD,CACEC,aAhCmB,SAAA4B,GACvBgC,EAAS,CAAE1C,KAAM,aAAcmC,QAAS,CAAEzB,cAgCtC3B,aAToB,SAAAE,GAAI,OAC5BsB,EAASyC,OAAM,SAAAtC,GAAO,OAAIA,EAAQzB,OAASA,QAWzC,iCACE,wCAECsB,EAAS0C,OACR,oCACE,kBAAC/B,EAAD,CAAQC,SA3BG,SAAA+B,GACnBP,EAAUO,MA2BF,kBAAC5C,EAAD,CAAcC,SAAUqC,EAAgBpC,SAtC7B,SAAA6B,GACnBK,EAAS,CAAE1C,KAAM,gBAAiBmC,QAAS,CAAEE,mBAwCvC,oDClEM,MAASc,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,YAAc,iCAAiC,kBAAoB,0C","file":"static/js/main.557c474d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport uuidv1 from 'uuid/v1';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\n\r\nexport default function ContactForm({ onAddContact, isNameUnique }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleNameInput = e => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleNumberInput = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!isNameUnique(name)) {\r\n      toast.warning(`Contact ${name} already exists`);\r\n      return;\r\n    }\r\n\r\n    const newContact = { id: uuidv1(), name, number };\r\n    onAddContact(newContact);\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const [btnDisabled, setBtnDisabled] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setBtnDisabled(!name || !number);\r\n  }, [name, number]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <span>Name: </span>\r\n      <input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={handleNameInput}\r\n      />\r\n      <span>Number: </span>\r\n      <input\r\n        id=\"number\"\r\n        name=\"number\"\r\n        type=\"tel\"\r\n        value={number}\r\n        onChange={handleNumberInput}\r\n      />\r\n      <button type=\"submit\" disabled={btnDisabled}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  isNameUnique: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport uuidv1 from 'uuid/v1';\r\nimport css from './ContactList.module.css';\r\n\r\nexport default function ContactsList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <li className={css.contactList} key={uuidv1()}>\r\n          <span className={css.contactListName}>{contact.name}: </span>\r\n          <span className={css.contactListNumber}>{contact.number}</span>\r\n          <button type=\"button\" onClick={() => onDelete(contact.id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ onSearch }) {\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleInput = e => {\r\n    const input = e.target.value;\r\n\r\n    setInput(input);\r\n    onSearch(input);\r\n  };\r\n\r\n  return (\r\n    <label htmlFor=\"query\">\r\n      <span>Filter contacts by name: </span>\r\n      <input id=\"query\" type=\"text\" onChange={handleInput} value={input} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    toast.warning(\"Could't save the last change\");\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default {\r\n  get,\r\n  save,\r\n};\r\n","import React, { useState, useReducer, useMemo, useEffect } from 'react';\r\nimport ContactForm from './ContactForm';\r\nimport ContactsList from './ContactsList';\r\nimport Filter from './Filter';\r\n\r\nimport storage from './services/local-storage';\r\n\r\nconst contactsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'addContact':\r\n      return [...state, action.payload.contact];\r\n\r\n    case 'removeContact':\r\n      return state.filter(contact => contact.id !== action.payload.contactId);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  const [contacts, dispatch] = useReducer(\r\n    contactsReducer,\r\n    storage.get('contacts') || [],\r\n  );\r\n\r\n  const handleAddContact = contact => {\r\n    dispatch({ type: 'addContact', payload: { contact } });\r\n  };\r\n\r\n  const handleDelete = contactId => {\r\n    dispatch({ type: 'removeContact', payload: { contactId } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    storage.save('contacts', contacts);\r\n  }, [contacts]);\r\n\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const handleSearch = query => {\r\n    setFilter(query);\r\n  };\r\n\r\n  const contactsToShow = useMemo(() => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  }, [contacts, filter]);\r\n\r\n  const checkIfNameUnique = name =>\r\n    contacts.every(contact => contact.name !== name);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <ContactForm\r\n        onAddContact={handleAddContact}\r\n        isNameUnique={checkIfNameUnique}\r\n      />\r\n\r\n      <section>\r\n        <h2>Contacts</h2>\r\n\r\n        {contacts.length ? (\r\n          <>\r\n            <Filter onSearch={handleSearch} />\r\n            <ContactsList contacts={contactsToShow} onDelete={handleDelete} />\r\n          </>\r\n        ) : (\r\n          <p>No saved contacts</p>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1vcU_\",\"contactListNumber\":\"ContactList_contactListNumber__1mWTn\"};"],"sourceRoot":""}